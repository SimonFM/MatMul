#!/bin/sh

# VARIABLES --------------------------------------------------------------------

REPS=8
TIME_RE='[0-9]\+'
CTRL_RE='Control'
MULT_RE='Matmul'
TARGET='./build/matmul'

output=''
total_ctrl_time=0
total_mult_time=0

# FUNCTIONS --------------------------------------------------------------------

extract_time() {
  echo $output | grep -o "$1 \S* $TIME_RE" | grep -o "$TIME_RE"
}

assert_dimens() {
  for dimen in "$@"; do
    case $dimen in
      '' | *[!0-9]*)
        echo "Invalid matrix dimension: $dimen"
        exit 1
        ;;
      *)
        ;;
    esac
  done
}

# SCRIPT -----------------------------------------------------------------------

assert_dimens $@

if [ "$#" -eq 1 ]; then
  set -- "$1 $1 $1 $1"
elif [ "$#" -ne 4 ]; then
  echo "Expected 1 or 4 matrix dimensions"
  exit 1
fi

( make clean && make ) || exit 1

i=1;
while [ "$i" -le "$REPS" ]; do
  printf "\r[ %d / %d ]" "$i" "$REPS"
  output=$($TARGET $@)
  ctrl_time=$(extract_time "$CTRL_RE")
  mult_time=$(extract_time "$MULT_RE")
  total_ctrl_time=$(($total_ctrl_time + $ctrl_time))
  total_mult_time=$(($total_mult_time + $mult_time))
  i=$(($i + 1))
done

avg_ctrl_time=$(($total_ctrl_time / $REPS))
avg_mult_time=$(($total_mult_time / $REPS))
avg_speedup=$(($avg_ctrl_time / $avg_mult_time))

echo ""
printf "Avg. control time : %9d\n"        "$avg_ctrl_time"
printf "Avg. matmul  time : %9d\n"        "$avg_mult_time"
printf "Avg. speedup (int):       %3dx\n" "$avg_speedup"
